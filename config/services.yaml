# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    mailer_transport: smtp
    mailer_host: 127.0.0.1
    mailer_user: null
    mailer_password: null
    user_email_adress: "%env(USER_EMAIL_ADRESS)%"
    user_email_title: "%env(USER_EMAIL_TITLE)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'


    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #letter
    app_main.admin.letter:
        class: App\Admin\LetterAdmin
        arguments:
            - ~
            - App\Entity\Letter
            - SonataAdminBundle:CRUD
        tags:
            - {name: sonata.admin, manager_type: orm , group: "app_main.admin.group.orders", label: "Письма с заявками" }

    app_main.admin.order:
        class: App\Admin\OrderAdmin
        arguments:
            - ~
            - App\Entity\Order
            - SonataAdminBundle:CRUD
        tags:
            - {name: sonata.admin, manager_type: orm , group: "app_main.admin.group.orders", label: "Заказ товара" }

  #Review
    app_main.admin.review:
        class: App\Admin\ReviewAdmin
        arguments:
            - ~
            - App\Entity\Review
            - 'PixSortableBehaviorBundle:SortableAdmin' # define the new controller via the third argument
        tags:
            - {name: sonata.admin, manager_type: orm , group: "app_main.admin.group.pages", label: "Отзывы" }
